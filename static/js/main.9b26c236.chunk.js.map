{"version":3,"sources":["../../src/fields/constants/langConstants.js","../../src/fields/Input.js","../../src/fields/Radio.js","../../src/fields/Checkbox.js","../../src/fields/Select.js","../../src/fields/Toggle.js","../../src/fields/Textarea.js","../../src/fields/Rating.js","../../src/fields/Heading.js","../../src/fields/Separator.js","../../src/index.js","App.js","index.js"],"names":["LANG","boolean","checkbox","date","dropdown","email","numeric","radio","rating","text","textarea","Input","fieldType","componentDidMount","this","props","field","document","render","className","width","htmlFor","order","type","state","id","name","placeholder","autoComplete","Component","Radio","radioOptions","values","map","key","value","option","Checkbox","language","Select","defaultValue","Toggle","Textarea","Rating","spans","ratingField","i","onClick","Heading","Separator","FormGenerator","formData","console","index","App","jsonData","require","responseData","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9b26c236.chunk.js","sourcesContent":["export const LANG = {\n  FIELD: 'field',\n  SEPARATOR: 'separator',\n  HEADING: 'heading',\n  NUMBER: 'number',\n  FIELD_TYPES: {\n    boolean: 'Boolean',\n    checkbox: 'Checkbox',\n    date: 'Date',\n    dropdown: 'Dropdown',\n    email: 'Email',\n    numeric: 'Numeric',\n    radio: 'Radio',\n    rating: 'Rating',\n    text: 'Text',\n    textarea: 'Textarea',\n  },\n  COL: {\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    10: 10,\n    11: 11,\n    12: 12,\n  },\n  DEFAULT_COL: 4,\n  SUBMIT: 'Submit',\n}\n","import React, { Component } from 'react'\nimport { LANG } from './constants/index.js'\n\nclass Input extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fieldType: '',\n    }\n  }\n\n  componentDidMount() {\n    if (\n      LANG.FIELD_TYPES.numeric === LANG.FIELD_TYPES[this.props.field.fieldType]\n    ) {\n      this.setState({\n        fieldType: LANG.NUMBER,\n      })\n    } else {\n      this.setState({\n        fieldType: this.props.field.fieldType,\n      })\n    }\n    if (this.props.field.isRequired) {\n      document.getElementById('field-' + this.props.field.order).required = true\n    }\n  }\n\n  render() {\n    return (\n      <div className='form-group'>\n        <div\n          className={`col-md-${\n            this.props.field.width ? this.props.field.width : LANG.DEFAULT_COL\n          }`}\n        >\n          <label htmlFor={'field-' + this.props.field.order}>\n            {this.props.field.name}\n          </label>\n          <input\n            type={this.state.fieldType}\n            id={'field-' + this.props.field.order}\n            name={'field-' + this.props.field.order}\n            className='form-control'\n            placeholder='Type Here'\n            autoComplete='off'\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Input\n","import React, { Component } from 'react'\nimport { LANG } from './constants/index.js'\n\nclass Radio extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentDidMount() {\n    if (this.props.field.isRequired) {\n      let radioOptions = document.querySelectorAll(\n        'input[name=field-' + this.props.field.order + ']'\n      )\n      radioOptions[0].checked = true\n    }\n  }\n\n  render() {\n    return (\n      <div className='form-group'>\n        <div\n          className={`col-md-${\n            this.props.field.width ? this.props.field.width : LANG.DEFAULT_COL\n          }`}\n        >\n          <label>{this.props.field.name}</label>\n          <div className='row col-md-12'>\n            {this.props.field.values.map((option, key) => (\n              <div className='radio' key={key}>\n                <label htmlFor={'field-' + this.props.field.order}>\n                  <input\n                    type='radio'\n                    name={'field-' + this.props.field.order}\n                    value={option.key}\n                  />\n                  {' ' + option.value}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Radio\n","import React, { Component } from 'react'\nimport { LANG } from './constants/index.js'\n\nclass Checkbox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      language: 'en',\n    }\n  }\n\n  handleChange = (event) => {}\n\n  render() {\n    return (\n      <div className='form-group'>\n        <div\n          className={`col-md-${\n            this.props.field.width ? this.props.field.width : LANG.DEFAULT_COL\n          }`}\n        >\n          <label>{this.props.field.name}</label>\n          {this.props.field.values.map((option, key) => (\n            <div className='checkbox' key={key}>\n              <label htmlFor={'field-' + this.props.field.order}>\n                <input\n                  type='checkbox'\n                  name={'field-' + this.props.field.order}\n                  value={option.key}\n                />\n                {' ' + option.value}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Checkbox\n","import React, { Component } from 'react'\nimport { LANG } from './constants/index.js'\n\nclass Select extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentDidMount() {\n    if (this.props.field.isRequired) {\n      document.getElementById('field-' + this.props.field.order).required = true\n    }\n  }\n\n  render() {\n    return (\n      <div className='form-group'>\n        <div\n          className={`col-md-${\n            this.props.field.width ? this.props.field.width : LANG.DEFAULT_COL\n          }`}\n        >\n          <label htmlFor={'field-' + this.props.field.order}>\n            {this.props.field.name}\n          </label>\n          <select\n            className='custom-select'\n            id={'field-' + this.props.field.order}\n            name={'field-' + this.props.field.order}\n          >\n            <option defaultValue>Select option from the dropdown</option>\n            {this.props.field.values.map((option, key) => (\n              <option key={key} value={option.key}>\n                {option.value}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Select\n","import React, { Component } from 'react'\nimport { LANG } from './constants/index.js'\n\nclass Toggle extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  handleChange = (event) => {}\n\n  render() {\n    return (\n      <div className='form-group'>\n        <div\n          className={`col-md-${\n            this.props.field.width ? this.props.field.width : LANG.DEFAULT_COL\n          }`}\n        >\n          <label>{this.props.field.name}</label>\n          <br />\n          <label className='switch'>\n            <input\n              type='checkbox'\n              id={'field-' + this.props.field.order}\n              name={'field-' + this.props.field.order}\n            />\n            <span className='slider round'></span>\n          </label>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Toggle\n","import React, { Component } from 'react'\nimport { LANG } from './constants/index.js'\n\nclass Textarea extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentDidMount() {\n    if (this.props.field.isRequired) {\n      document.getElementById('field-' + this.props.field.order).required = true\n    }\n  }\n\n  render() {\n    return (\n      <div className='form-group'>\n        <div\n          className={`col-md-${\n            this.props.field.width ? this.props.field.width : LANG.DEFAULT_COL\n          }`}\n        >\n          <label htmlFor={'field-' + this.props.field.order}>\n            {this.props.field.name}\n          </label>\n          <textarea\n            id={'field-' + this.props.field.order}\n            name={'field-' + this.props.field.order}\n            className='form-control'\n            placeholder='Type here'\n            autoComplete='off'\n          ></textarea>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Textarea\n","import React, { Component } from 'react'\nimport { LANG } from './constants/index.js'\n\nclass Rating extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.manageRating = this.manageRating.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.props.field.isRequired) {\n      // document.getElementById(\"field-\" + this.props.field.order).required = true;\n    }\n  }\n\n  manageRating = (event, rating) => {\n    let ratingField = document.getElementById('rating')\n    let spans = ratingField.getElementsByTagName('span')\n    for (let i = 0; i < spans.length; i++) {\n      if (i < rating) {\n        spans[i].classList.add('checked')\n      } else {\n        spans[i].classList.remove('checked')\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className='form-group'>\n        <div\n          className={`col-md-${\n            this.props.field.width ? this.props.field.width : LANG.DEFAULT_COL\n          }`}\n        >\n          <label htmlFor='grade'>{this.props.field.name}</label>\n          <div id='rating'>\n            <span\n              onClick={(event) => this.manageRating(event, 1)}\n              className='fa fa-star fa-lg pointer'\n            >\n              &nbsp;\n            </span>\n            <span\n              onClick={(event) => this.manageRating(event, 2)}\n              className='fa fa-star fa-lg pointer'\n            >\n              &nbsp;\n            </span>\n            <span\n              onClick={(event) => this.manageRating(event, 3)}\n              className='fa fa-star fa-lg pointer'\n            >\n              &nbsp;\n            </span>\n            <span\n              onClick={(event) => this.manageRating(event, 4)}\n              className='fa fa-star fa-lg pointer'\n            >\n              &nbsp;\n            </span>\n            <span\n              onClick={(event) => this.manageRating(event, 5)}\n              className='fa fa-star fa-lg pointer'\n            >\n              &nbsp;\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Rating\n","import React, { Component } from \"react\";\n\nclass Heading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: \"en\"\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"form-group\">\n        <div className=\"col-md-12 only-label\">\n          <label htmlFor=\"dateOfAssessment\">\n            {this.props.field.values[0].heading}\n          </label>\n          <p>{this.props.field.values[0].subHeading}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Heading;\n","import React, { Component } from 'react'\n\nclass Separator extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      language: 'en',\n    }\n  }\n\n  render() {\n    return (\n      <div className='form-group'>\n        <div className='col-md-12 only-label'>\n          <hr />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Separator\n","import React from 'react'\nimport Input from './fields/Input'\nimport Radio from './fields/Radio'\nimport Checkbox from './fields/Checkbox'\nimport Select from './fields/Select'\nimport Toggle from './fields/Toggle'\nimport Textarea from './fields/Textarea'\nimport Rating from './fields/Rating'\nimport Heading from './fields/Heading'\nimport Separator from './fields/Separator'\nimport { LANG } from './fields/constants/index.js'\n\nexport const FormGenerator = ({ formData }) => {\n  console.log(formData)\n  return (\n    <div className='row pt-4 pr-4'>\n      <div className='col-12'>\n        <h4 className='ml-3 mb-4'>{formData.title}</h4>\n        <form\n          autoComplete='off'\n          className='pb-5'\n          id={formData.formId || 'tarento-generated'}\n        >\n          {formData.fields &&\n            formData.fields.map((field, index) => {\n              switch (field.fieldType) {\n                case LANG.SEPARATOR:\n                  return <Separator key={index} />\n                case LANG.HEADING:\n                  return <Heading key={index} field={field} />\n                default:\n                  switch (LANG.FIELD_TYPES[field.fieldType]) {\n                    case LANG.FIELD_TYPES.text:\n                      return <Input key={index} field={field} />\n                    case LANG.FIELD_TYPES.numeric:\n                      return <Input key={index} field={field} />\n                    case LANG.FIELD_TYPES.date:\n                      return <Input key={index} field={field} />\n                    case LANG.FIELD_TYPES.email:\n                      return <Input key={index} field={field} />\n                    case LANG.FIELD_TYPES.dropdown:\n                      return <Select key={index} field={field} />\n                    case LANG.FIELD_TYPES.radio:\n                      return <Radio key={index} field={field} />\n                    case LANG.FIELD_TYPES.checkbox:\n                      return <Checkbox key={index} field={field} />\n                    case LANG.FIELD_TYPES.boolean:\n                      return <Toggle key={index} field={field} />\n                    case LANG.FIELD_TYPES.textarea:\n                      return <Textarea key={index} field={field} />\n                    case LANG.FIELD_TYPES.rating:\n                      return <Rating key={index} field={field} />\n                    default:\n                      return <div key={index}></div>\n                  }\n              }\n            })}\n          <div className='form-group'>\n            <div className='col-md-12 only-label'>\n              <button type='submit' className='btn btn-success'>\n                {LANG.SUBMIT}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { FormGenerator } from 'react-form-generator'\nimport 'react-form-generator/dist/index.css'\n\nconst App = () => {\n  var jsonData = require('./test-json-data.json')\n  return <FormGenerator formData={jsonData.responseData} />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}